"""empty message

Revision ID: 005446708bda
Revises: 46a7a3913a2b
Create Date: 2024-07-31 07:02:47.346225

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

import models as models

# revision identifiers, used by Alembic.
revision = "005446708bda"
down_revision = "46a7a3913a2b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tool_providers")
    op.drop_table("celery_taskmeta")
    op.drop_table("celery_tasksetmeta")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "celery_tasksetmeta",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('taskset_id_sequence'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "taskset_id", sa.VARCHAR(length=155), autoincrement=False, nullable=True
        ),
        sa.Column("result", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "date_done", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="celery_tasksetmeta_pkey"),
        sa.UniqueConstraint("taskset_id", name="celery_tasksetmeta_taskset_id_key"),
    )
    op.create_table(
        "celery_taskmeta",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('task_id_sequence'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "task_id", sa.VARCHAR(length=155), autoincrement=False, nullable=True
        ),
        sa.Column("status", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column("result", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "date_done", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("traceback", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(length=155), autoincrement=False, nullable=True),
        sa.Column("args", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("kwargs", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("worker", sa.VARCHAR(length=155), autoincrement=False, nullable=True),
        sa.Column("retries", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("queue", sa.VARCHAR(length=155), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="celery_taskmeta_pkey"),
        sa.UniqueConstraint("task_id", name="celery_taskmeta_task_id_key"),
    )
    op.create_table(
        "tool_providers",
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("uuid_generate_v4()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "tool_name", sa.VARCHAR(length=40), autoincrement=False, nullable=False
        ),
        sa.Column(
            "encrypted_credentials", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "is_enabled",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP(0)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP(0)"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="tool_provider_pkey"),
        sa.UniqueConstraint(
            "tenant_id", "tool_name", name="unique_tool_provider_tool_name"
        ),
    )
    # ### end Alembic commands ###
